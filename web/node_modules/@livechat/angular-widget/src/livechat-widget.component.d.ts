import { OnInit } from '@angular/core';
import { LiveChatWidgetApiModel } from './livechat-widget.models';
import { Subject } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export declare class LivechatWidgetComponent implements OnInit {
    licenseId: number;
    group: number;
    chatBetweenGroups: boolean;
    params: {
        name: string;
        value: any;
    };
    visitor: {
        name: string;
        email: string;
    };
    gaVersion: string;
    onChatLoaded: Subject<LiveChatWidgetApiModel>;
    onAfterLoad: Subject<unknown>;
    onBeforeLoad: Subject<unknown>;
    onChatEnded: Subject<unknown>;
    onChatStarted: Subject<any>;
    onChatStateChanged: Subject<any>;
    onChatWindowHidden: Subject<unknown>;
    onChatWindowMinimized: Subject<unknown>;
    onChatWindowOpened: Subject<unknown>;
    data: any;
    onMessage: Subject<any>;
    onPostchatSurveySubmitted: Subject<any>;
    onPrechatSurveySubmitted: Subject<any>;
    onRatingCommentSubmitted: Subject<any>;
    onRatingSubmitted: Subject<any>;
    onTicketCreated: Subject<any>;
    onWidgetResize: Subject<unknown>;
    agentsAreAvailable: Function;
    chatRunning: Function;
    chatWindowHidden: Function;
    chatWindowMaximized: Function;
    chatWindowMinimized: Function;
    closeChat: Function;
    getChatId: Function;
    getChatsNumber: Function;
    getLastVisitTimestamp: Function;
    getPageViewsNumber: Function;
    getVisitorId: Function;
    getVisitsNumber: Function;
    hideChatWindow: Function;
    minimizeChatWindow: Function;
    openChatWindow: Function;
    setCustomVariables: Function;
    setVisitorEmail: Function;
    setVisitorName: Function;
    triggerSalesTracker: Function;
    updateCustomVariables: Function;
    visitorEngaged: Function;
    visitorQueued: Function;
    private lc;
    constructor();
    ngOnInit(): void;
    ngOnDestroy(): void;
    private _chatLoaded;
    private _setCallbacks;
    private _setMethods;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LivechatWidgetComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<LivechatWidgetComponent, "livechat-widget", never, {
    "licenseId": "licenseId";
    "group": "group";
    "chatBetweenGroups": "chatBetweenGroups";
    "params": "params";
    "visitor": "visitor";
    "gaVersion": "gaVersion";
}, {
    "onChatLoaded": "onChatLoaded";
    "onAfterLoad": "onAfterLoad";
    "onBeforeLoad": "onBeforeLoad";
    "onChatEnded": "onChatEnded";
    "onChatStarted": "onChatStarted";
    "onChatStateChanged": "onChatStateChanged";
    "onChatWindowHidden": "onChatWindowHidden";
    "onChatWindowMinimized": "onChatWindowMinimized";
    "onChatWindowOpened": "onChatWindowOpened";
    "onMessage": "onMessage";
    "onPostchatSurveySubmitted": "onPostchatSurveySubmitted";
    "onPrechatSurveySubmitted": "onPrechatSurveySubmitted";
    "onRatingCommentSubmitted": "onRatingCommentSubmitted";
    "onRatingSubmitted": "onRatingSubmitted";
    "onTicketCreated": "onTicketCreated";
    "onWidgetResize": "onWidgetResize";
}, never>;
}

//# sourceMappingURL=livechat-widget.component.d.ts.map