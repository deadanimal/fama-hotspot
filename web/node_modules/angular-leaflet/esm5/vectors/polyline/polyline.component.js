/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, forwardRef, Input } from '@angular/core';
import { polyline } from 'leaflet';
import { BaseLayer } from '../../core/base-layer';
var PolylineComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PolylineComponent, _super);
    function PolylineComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(PolylineComponent.prototype, "coordinates", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._coordinates = value;
            if (this.layerRef) {
                this.layerRef.setLatLngs(value);
            }
            else {
                this.createLayer();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PolylineComponent.prototype, "options", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._options = value;
            if (this.layerRef) {
                this.layerRef.setStyle(value);
            }
            else {
                this.createLayer();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} map
     * @return {?}
     */
    PolylineComponent.prototype.addTo = /**
     * @param {?} map
     * @return {?}
     */
    function (map) {
        _super.prototype.addTo.call(this, map);
        if (!this.layerRef && this._coordinates) {
            this.createLayer();
        }
    };
    /**
     * @private
     * @return {?}
     */
    PolylineComponent.prototype.createLayer = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.mapRef && this._coordinates) {
            this.layerRef = polyline(this._coordinates, tslib_1.__assign({}, this._options));
            this.mapRef.addLayer(this.layerRef);
            this.initHandlers();
        }
    };
    PolylineComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ngl-polyline',
                    template: '',
                    providers: [{ provide: BaseLayer, useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return PolylineComponent; })) }]
                }] }
    ];
    PolylineComponent.propDecorators = {
        coordinates: [{ type: Input }],
        options: [{ type: Input }]
    };
    return PolylineComponent;
}(BaseLayer));
export { PolylineComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PolylineComponent.prototype._coordinates;
    /**
     * @type {?}
     * @private
     */
    PolylineComponent.prototype._options;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9seWxpbmUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1sZWFmbGV0LyIsInNvdXJjZXMiOlsidmVjdG9ycy9wb2x5bGluZS9wb2x5bGluZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0QsT0FBTyxFQUFrRCxRQUFRLEVBQVksTUFBTSxTQUFTLENBQUM7QUFDN0YsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRWxEO0lBS3VDLDZDQUFtQjtJQUwxRDs7SUEyQ0EsQ0FBQztJQXJDQyxzQkFBYSwwQ0FBVzs7Ozs7UUFBeEIsVUFBeUIsS0FBeUI7WUFDaEQsSUFBSSxDQUFDLFlBQVksR0FBRyxLQUFLLENBQUM7WUFDMUIsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO2dCQUNqQixJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUNqQztpQkFBTTtnQkFDTCxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7YUFDcEI7UUFDSCxDQUFDOzs7T0FBQTtJQUVELHNCQUFhLHNDQUFPOzs7OztRQUFwQixVQUFxQixLQUFrQjtZQUNyQyxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztZQUN0QixJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7Z0JBQ2pCLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO2FBQy9CO2lCQUFNO2dCQUNMLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQzthQUNwQjtRQUNILENBQUM7OztPQUFBOzs7OztJQUtELGlDQUFLOzs7O0lBQUwsVUFBTSxHQUFxQjtRQUN6QixpQkFBTSxLQUFLLFlBQUMsR0FBRyxDQUFDLENBQUM7UUFDakIsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLFlBQVksRUFBRTtZQUN2QyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7U0FDcEI7SUFDSCxDQUFDOzs7OztJQUVPLHVDQUFXOzs7O0lBQW5CO1FBQ0UsSUFBSSxJQUFJLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUU7WUFDcEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLFlBQVksdUJBQ3JDLElBQUksQ0FBQyxRQUFRLEVBQ2hCLENBQUM7WUFDSCxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDcEMsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1NBQ3JCO0lBQ0gsQ0FBQzs7Z0JBMUNGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsY0FBYztvQkFDeEIsUUFBUSxFQUFFLEVBQUU7b0JBQ1osU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxVQUFVOzs7NEJBQUMsY0FBTSxPQUFBLGlCQUFpQixFQUFqQixDQUFpQixFQUFDLEVBQUUsQ0FBQztpQkFDdEY7Ozs4QkFFRSxLQUFLOzBCQVNMLEtBQUs7O0lBNEJSLHdCQUFDO0NBQUEsQUEzQ0QsQ0FLdUMsU0FBUyxHQXNDL0M7U0F0Q1ksaUJBQWlCOzs7Ozs7SUFtQjVCLHlDQUF5Qzs7Ozs7SUFDekMscUNBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBmb3J3YXJkUmVmLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTGF0TG5nRXhwcmVzc2lvbiwgTGF5ZXJHcm91cCwgTWFwLCBQYXRoT3B0aW9ucywgcG9seWxpbmUsIFBvbHlsaW5lIH0gZnJvbSAnbGVhZmxldCc7XG5pbXBvcnQgeyBCYXNlTGF5ZXIgfSBmcm9tICcuLi8uLi9jb3JlL2Jhc2UtbGF5ZXInO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICduZ2wtcG9seWxpbmUnLFxuICB0ZW1wbGF0ZTogJycsXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogQmFzZUxheWVyLCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBQb2x5bGluZUNvbXBvbmVudCkgfV1cbn0pXG5leHBvcnQgY2xhc3MgUG9seWxpbmVDb21wb25lbnQgZXh0ZW5kcyBCYXNlTGF5ZXI8UG9seWxpbmU+IHtcbiAgQElucHV0KCkgc2V0IGNvb3JkaW5hdGVzKHZhbHVlOiBMYXRMbmdFeHByZXNzaW9uW10pIHtcbiAgICB0aGlzLl9jb29yZGluYXRlcyA9IHZhbHVlO1xuICAgIGlmICh0aGlzLmxheWVyUmVmKSB7XG4gICAgICB0aGlzLmxheWVyUmVmLnNldExhdExuZ3ModmFsdWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmNyZWF0ZUxheWVyKCk7XG4gICAgfVxuICB9XG5cbiAgQElucHV0KCkgc2V0IG9wdGlvbnModmFsdWU6IFBhdGhPcHRpb25zKSB7XG4gICAgdGhpcy5fb3B0aW9ucyA9IHZhbHVlO1xuICAgIGlmICh0aGlzLmxheWVyUmVmKSB7XG4gICAgICB0aGlzLmxheWVyUmVmLnNldFN0eWxlKHZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5jcmVhdGVMYXllcigpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgX2Nvb3JkaW5hdGVzOiBMYXRMbmdFeHByZXNzaW9uW107XG4gIHByaXZhdGUgX29wdGlvbnM6IFBhdGhPcHRpb25zO1xuXG4gIGFkZFRvKG1hcDogTWFwIHwgTGF5ZXJHcm91cCk6IHZvaWQge1xuICAgIHN1cGVyLmFkZFRvKG1hcCk7XG4gICAgaWYgKCF0aGlzLmxheWVyUmVmICYmIHRoaXMuX2Nvb3JkaW5hdGVzKSB7XG4gICAgICB0aGlzLmNyZWF0ZUxheWVyKCk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBjcmVhdGVMYXllcigpIHtcbiAgICBpZiAodGhpcy5tYXBSZWYgJiYgdGhpcy5fY29vcmRpbmF0ZXMpIHtcbiAgICAgIHRoaXMubGF5ZXJSZWYgPSBwb2x5bGluZSh0aGlzLl9jb29yZGluYXRlcywge1xuICAgICAgICAuLi50aGlzLl9vcHRpb25zXG4gICAgICB9KTtcbiAgICAgIHRoaXMubWFwUmVmLmFkZExheWVyKHRoaXMubGF5ZXJSZWYpO1xuICAgICAgdGhpcy5pbml0SGFuZGxlcnMoKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==